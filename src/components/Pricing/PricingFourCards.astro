---
/**
 * * pricing sections with toggle for monthly or yearly payments
 * This is designed for 3 pricing items, but can be modified to support more
 */

import Badge from "@components/Badge/Badge.astro";
import Button from "@components/Button/Button.astro";
import { Switch } from "@components/starwind/switch";
import bestValueImage from "@images/best-value.png";
import { getLocaleFromUrl } from "@js/localeUtils";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";

interface pricingItem {
	name: string; // plan name
	description: string; // plan description
	featured?: boolean; // if true, will be highlighted or otherwise featured
	price: {
		custom?: boolean; // if true, will show "contact us" instead of price
		monthly?: number; // monthly price if paid by month
		yearly?: number; // monthly price if paid by year
	};
	features: string[]; // list of features
	href: string; // button link to sign up or other page
	linkText: string; // text for the button
}

// This is designed for 3 pricing items, but can be modified to support more
const pricingData: pricingItem[] = [
	{
		name: "Basic",
		description: "Essential features for beginners. Get started with ease",
		price: {
			monthly: 29,
			yearly: 19,
		},
		features: ["Basic Features", "1 user", "2 GB Free Access", "Limited Support"],
		href: "/signup",
		linkText: "Try 14 Days Free Trial",
	},
	{
		name: "Professional",
		description: "Perfect for solo professionals. Unlock advanced features",
		featured: true,
		price: {
			monthly: 49,
			yearly: 39,
		},
		features: ["Pro features", "Up to 10 users", "50 GB Free Access", "Priority support"],
		href: "/signup",
		linkText: "Try 14 Days Free Trial",
	},
	{
		name: "Enterprise",
		description: "Scale your business faster. Comprehensive plan",
		price: {
			monthly: 99,
			yearly: 79,
		},
		features: ["Pro features", "Unlimited Users", "200 GB Free Access", "Premium Support"],
		href: "/signup",
		linkText: "Try 14 Days Free Trial",
	},
	{
		name: "Contact Us",
		description: "For bespoke solutions tailored to your business needs",
		price: {
			custom: true,
		},
		features: ["White Glove Onboarding", "All Features", "unlimited Users", "Dedicated support"],
		href: "/contact",
		linkText: "Contact Us",
	},
];

const currLocale = getLocaleFromUrl(Astro.url);
---

<section id="pricing-four-cards" class="bg-base-200/60 dark:bg-base-950 py-16 md:py-24">
	<div class="site-container relative">
		<div class="flex justify-center">
			<!-- <Badge>Pricing</Badge> -->
		</div>
		<h2 class="h2 text-center">A plan for every business</h2>

		<!-- Toggle switch for monthly or yearly pricing -->
		<div class="mt-6 flex justify-center">
			<label
				for="pricing-four-cards__toggle"
				class="relative inline-flex cursor-pointer items-center gap-4 select-none"
			>
				<span class="description flex items-center">Monthly</span>
				<Switch id="pricing-four-cards__toggle" variant="primary" padding={4} />
				<span class="description flex items-center">Yearly</span>
			</label>
		</div>

		<!-- works for 3 pricing plans, adjust grid cols here to support more or less -->
		<div class="mx-auto mt-24 grid w-full gap-6 sm:grid-cols-2 md:mt-40 lg:grid-cols-4">
			{
				pricingData.map((plan) => (
					<div class="pricing-plan w-full">
						<div
							class="dark:bg-base-900 relative transform bg-white p-10 transition-transform duration-500 hover:-translate-y-2"
							class:list={[
								{
									"mt-10 rounded-b-lg sm:mt-0": plan.featured === true,
								},
								{
									"rounded-lg": plan.featured !== true,
								},
							]}
						>
							{plan.featured === true && (
								<div>
									<Image
										src={bestValueImage}
										class="absolute -top-32 right-8 z-10 hidden md:block dark:invert"
										alt="best value"
										loading="lazy"
										width={170}
										densities={[1.5, 2]}
									/>
									<div class="from-gradient-1 via-gradient-2 to-gradient-3 absolute -top-10 left-0 w-full rounded-t-xl bg-linear-40">
										<p class="py-2 text-center font-semibold tracking-tight text-white">
											Recommended
										</p>
									</div>
								</div>
							)}

							<div class="text-center">
								<h3 class="mb-8 text-xl font-semibold tracking-tight">{plan.name}</h3>
								{plan.price.custom === true ? (
									// if custom price, show "Custom" instead of price
									<>
										<h4>
											<span class="font-serif text-6xl tracking-tighter md:text-7xl">Custom</span>
										</h4>
										<span
											aria-hidden="true"
											class="description invisible mb-7 inline-block tracking-tight"
										>
											per user, per month
										</span>
									</>
								) : (
									<>
										<h4>
											<span class="text-xl font-semibold tracking-tight">$</span>
											<span class="pricing-monthly font-serif text-6xl tracking-tighter md:text-7xl">
												{plan.price.monthly}
											</span>
											<span class="pricing-yearly font-serif text-6xl tracking-tighter md:text-7xl">
												{plan.price.yearly}
											</span>
										</h4>
										<span class="description mb-7 inline-block tracking-tight">
											per user, per month
										</span>
									</>
								)}

								<div class="border-opacity-60 border-t border-b border-gray-300 py-8">
									<p class="description mx-auto max-w-xs tracking-tight">{plan.description}</p>
								</div>
								<ul class="py-8">
									{plan.features.map((feature) => (
										<li class="mb-2.5 flex flex-nowrap items-center justify-start gap-3">
											<Icon
												name="tabler/check"
												class="text-primary-600 dark:text-primary-400 size-5"
												aria-hidden="true"
											/>
											<span class="text-start font-medium">{feature}</span>
										</li>
									))}
								</ul>
								<Button
									class="duration-300"
									variant={plan.featured === true ? "primary" : "secondary"}
									href={plan.href}
								>
									{plan.linkText}
								</Button>
							</div>
						</div>
					</div>
				))
			}
		</div>
	</div>
</section>

<script>
	import type { SwitchChangeEvent } from "@/components/starwind/switch";

	function pricingPlanToggleSetup() {
		const pricingSection = document.getElementById("pricing-four-cards");
		const toggle = pricingSection?.querySelector("#pricing-four-cards__toggle");
		const monthlyPrices = pricingSection?.querySelectorAll(".pricing-monthly");
		const yearlyPrices = pricingSection?.querySelectorAll(".pricing-yearly");

		if (!toggle || !monthlyPrices || !yearlyPrices) return;

		toggle.addEventListener("starwind-switch:change", (e: Event) => {
			const event = e as SwitchChangeEvent;
			const isYearly = event.detail.checked;

			monthlyPrices.forEach((price) => price.classList.toggle("hidden", isYearly));
			yearlyPrices.forEach((price) => price.classList.toggle("hidden", !isYearly));
		});
	}

	// runs on initial page load
	pricingPlanToggleSetup();

	// runs on view transitions navigation
	document.addEventListener("astro:after-swap", pricingPlanToggleSetup);
</script>
