---
/**
 * * These are alternating side cards with titles, check-marked list items, and images
 */

import Badge from "@components/Badge/Badge.astro";
import Button from "@components/Button/Button.astro";
import { getLocaleFromUrl } from "@js/localeUtils";
import { Image } from "astro:assets";

interface Props {
	badge?: string; // small badge
	title: string; // larger title
	items: string[]; // list of items that will have check marks next to
	href?: string; // link to learn more
	image: ImageMetadata; // an imported image
	imageSide: "left" | "right";
	idx: number; // determines which "blob" icon svg to use. There are 4 options (0-3)
	rest?: any; // catch-all for any additional parameters, such as "aria-label"
}

const { badge, image, title, items, href, idx, imageSide, ...rest } = Astro.props as Props;

const currLocale = getLocaleFromUrl(Astro.url);
---

<div
	class="mx-auto grid gap-8 rounded-xl md:grid-cols-2 md:gap-12 lg:gap-20 mb-20"
	data-aos=`${imageSide == "left" ? "fade-right" : "fade-left"}`
	{...rest}
>
	<!-- text -->
	<div class=`${imageSide === "left" ? "md:order-last": ""} col-span-1 flex items-center`>
		<div>
			<h2 class="h2" set:html={title} />
			{badge ? (<Badge>{badge}</Badge>) : <></>}
			<ul class="mt-6">
				{
					items.map((item) => (
						<li class="description mt-4 flex items-center">
							<span>{item}</span>
						</li>
					))
				}
			</ul>
			{href ? (
			<div class="z-20 mt-8 flex">
				<Button
					variant="ghost"
					href={href}
					arrow="right"
					class="pl-0"
				>
					Get a free quote
				</Button>
			</div>
			) : <></>}
		</div>
	</div>

	<!-- image -->
	<div class="relative mx-auto max-w-4xl">
		<Image
			class="relative rounded-xl border border-transparent object-cover"
			src={image}
			alt={title}
			height={700}
		/>
	</div>
</div>
