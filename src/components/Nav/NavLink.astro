---
import { type navLinkItem } from "@config/types/configDataTypes";
import { getLocaleFromUrl } from "@js/localeUtils";
import { Icon } from "astro-icon/components";

import { getLocalizedRoute } from "@/js/translationUtils";

interface Props {
	navItem: navLinkItem;
	class?: string;
	noIcon?: boolean;
}

const { navItem, class: className, noIcon = false } = Astro.props as Props;
const { text, link, newTab = false, icon } = navItem;

const currLocale = getLocaleFromUrl(Astro.url);

const domain = import.meta.env.SITE; // pulls from astro.config.mjs
let actualLink: string;
if (!link.includes(domain) && !link.startsWith("/") && !link.startsWith("#")) {
	// it is an external link
	actualLink = link;
} else {
	// internal link, so we need to add the locale to the link
	actualLink = getLocalizedRoute(currLocale, link);
}
---

<li>
	<a
		class:list={[
			`nav__link--base relative flex w-full items-center gap-1.5 rounded-sm px-4 py-2 transition duration-200 ${className}`,
			{
				// styling for current active page link, if desired
				"": Astro.url.pathname === actualLink,
			},
		]}
		href={actualLink}
		target={newTab ? "_blank" : ""}
		rel={newTab ? "noopener noreferrer" : ""}
		aria-label={text}
	>
		{
			icon && !noIcon && (
				<Icon name={icon} aria-hidden="true" class="mt-1 size-5 self-start md:size-4" />
			)
		}
		{text}
	</a>
</li>
