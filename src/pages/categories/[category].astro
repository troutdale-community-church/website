---
import Badge from "@components/Badge/Badge.astro";
import CategoryCloud from "@components/CategoryCloud/CategoryCloud.astro";
import PostCard from "@components/PostCard/PostCardNova.astro";
import { defaultLocale } from "@config/siteSettings.json";
import { countItems, getAllPosts, sortByValue } from "@js/blogUtils";
import { getLocaleFromUrl } from "@js/localeUtils";
import { humanize, slugify } from "@js/textUtils";
import BaseLayout from "@layouts/BaseLayout.astro";
import { type InferGetStaticParamsType, type InferGetStaticPropsType } from "astro";

// generate pagination for tag pages if there are a bunch of posts for a single tag
export async function getStaticPaths() {
	const posts = await getAllPosts(defaultLocale);
	const allCategories = posts.map((post) => post.data.categories).flat();
	const countedCategories = countItems(allCategories);
	const processedCategories = sortByValue(countedCategories);

	return processedCategories.map(([category, count]) => ({
		params: { category: category },
	}));
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
type Params = InferGetStaticParamsType<typeof getStaticPaths>;

// const filteredPosts = Astro.props as Props;
const { category } = Astro.params as Params;

const currLocale = getLocaleFromUrl(Astro.url);
const posts = await getAllPosts(currLocale);
const filteredPosts = posts.filter((post) => {
	// make sure to slugify them for comparison
	const slugifiedCategory = post.data.categories.map((category) => slugify(category));

	return slugifiedCategory.includes(category);
});
---

<BaseLayout
	title={`Our Blog Posts on ${humanize(category)}`}
	description="Learn from our blog posts about web development, design, and more."
>
	<section class="site-container">
		<div class="overflow-x-clip pt-28 md:pt-36">
			<div class="mx-auto flex max-w-[950px] flex-col justify-center">
				<!-- <div class="mx-auto">
          <Badge>Blog</Badge>
        </div> -->
				<h1 class="h1 mb-0 text-center">
					Posts on <span class="">{humanize(category).toLowerCase()}</span>
				</h1>
			</div>

			<div class="my-10 flex justify-center md:mb-20">
				<CategoryCloud />
			</div>
		</div>

		<div class="grid gap-8 gap-y-10 md:grid-cols-2 md:gap-16 lg:grid-cols-3">
			{
				filteredPosts.map((post) => (
					<PostCard post={post} showDescription={true} data-aos="fade-up" />
				))
			}
		</div>
	</section>
</BaseLayout>
